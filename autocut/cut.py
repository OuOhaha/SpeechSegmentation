# written by OuOhaha
from pydub import AudioSegment
import pandas as pd
import os

# Load the file name
with open('your_file_name_here.txt', 'r') as file:
    content = file.readlines()
    FILE_NAME = content[0].strip()
    AUDIO_FORMAT = content[1].strip()

# Load the audio
check_file_load = 0
file = FILE_NAME + "." + AUDIO_FORMAT
try:
    if AUDIO_FORMAT == "mp3":
        audio = AudioSegment.from_mp3(file)
    elif AUDIO_FORMAT == "wav":
        audio = AudioSegment.from_wav(file)
    else:
        audio = AudioSegment.from_file(file)
    print(FILE_NAME + "." + AUDIO_FORMAT + " is successfully loaded.")
    check_file_load += 1
except:
    print(FILE_NAME + "." + AUDIO_FORMAT + " is not founded.")
    check_file_load -= 1

# Load the tsv file generated by whisper
stamps = FILE_NAME + ".tsv"
stamp_list = pd.read_csv(stamps, sep='\t', header=0).iloc[:, :2].apply(lambda row: f"({row[0]}, {row[1]})", axis=1).to_list()
time_stamp = []
for item in stamp_list:
    value_tuple = eval(item)
    time_stamp.append(value_tuple)
if len(time_stamp) != 0:
    print(FILE_NAME + ".tsv is successfully loaded.")
    check_file_load += 1
else:
    print(FILE_NAME + ".tsv is not founded.")

# Split the audio and save segments
EXPORT_PATH = "output"
if (check_file_load == 2):
    print("Start segmentation.")
    for i, (start, end) in enumerate(time_stamp, start=1):
        segment = audio[start:end]
        output_file = os.path.join(EXPORT_PATH, f"{i}." + AUDIO_FORMAT)
        segment.export(output_file, format=AUDIO_FORMAT)
    print("Completed.")
else:
    print("input error.")